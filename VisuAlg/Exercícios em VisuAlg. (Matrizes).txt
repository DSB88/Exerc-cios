Exercícios em VisuAlg. (Vetores).

01-) Algoritmo "Diagonal_Negativa"

//Fazer um programa para ler um número inteiro N (máximo = 10) e uma matriz quadrada de ordem N
//contendo números inteiros. Em seguida, mostrar a diagonal principal e a quantidade de valores
//negativos da matriz.

Var

mat: vetor [0..4, 0..4] de inteiro
M, N, i, j, cont, indice,numero : inteiro

Inicio

           escreva("Qual a ordem da matriz? ")
           leia(M)

        n<-m


           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])
           
           fimpara
           fimpara

           escreval
           escreval("DIAGONAL PRINCIPAL:")
           
           para i de 0 ate M-1 faca


           para j de 0 ate N-1 faca
           indice<- indice + 1

           se i=j  entao
           escreva(mat[i, j]," " )
           fimse
           
           se mat[i, j] < 0 entao
           cont<- cont + 1
           fimse

           fimpara
           fimpara
           
           escreval
           escreval
           escreval("QUANTIDADE DE NEGATIVOS = ",cont)
           
Fimalgoritmo
    
____________________________________

02-) Algoritmo "Soma_Linhas"

//fazer um programa para ler dois números inteiros M e N (máximo = 10). Em seguida, ler uma matriz
//de M linhas e N colunas contendo números reais. Gerar um vetor de modo que cada elemento do vetor
//seja a soma dos elementos da linha correspondente da matriz. Mostrar o vetor gerado.

Var

vet1: vetor [0..4] de inteiro
vet: vetor [0..4] de inteiro
mat: vetor [0..4, 0..4] de inteiro
M, N, i, j, cont, indice,somaL,somaC : inteiro

Inicio

           escreva("Quantas linhas vai ter a matriz? ")
           leia(M)

           escreva("Quantas colunas vai ter a matriz? ")
           leia(N)

           limpatela()
           escreval("Digite os elementos da 1a. linha:")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])
           
           fimpara
           se i <1 entao
           escreval("Digite os elementos da 2a. linha:")
           fimse
           fimpara

           
           escreva("VETOR GERADO: ")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           vet[j]<-  mat[i, j]
           vet1[j]<-  mat[i, j]
           
           se (i=0) e (j<=3) entao
           somaL<- somaL + vet[j]
           fimse
           
           se (i=1) e (j<=3) entao
           somaC<- somaC + vet1[j]
           fimse

           fimpara
           fimpara
           
           escreval
           escreval(somaL:4:1)
           escreval(somaC:4:1)

           
Fimalgoritmo
    
____________________________________

03-) Algoritmo "Negativos_Matriz"

//Ler dois números M e N (máximo = 10), e depois ler uma matriz MxN de números inteiros, conforme
//exemplo. Em seguida, mostrar na tela somente os números negativos da matriz.

Var

mat: vetor [0..4, 0..4] de inteiro
M, N, i, j, cont, indice,numero : inteiro

Inicio

           escreval("Qual a quantidade de linhas da matriz ? ")
           leia(M)

           escreval("Qual a quantidade de colunas da matriz ? ")
           leia(n)

           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])

           fimpara
           fimpara

           escreval
           escreval("VALORES NEGATIVOS:")

           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           se mat[i, j] < 0 entao
           escreva(mat[i, j])
           escreval
           fimse

           fimpara
           fimpara


Fimalgoritmo
    
____________________________________

04-) Algoritmo "Cada_Linha"

//Ler um inteiro N e uma matriz quadrada de ordem N (máximo = 10). Mostrar qual o maior elemento
//de cada linha. Suponha não haver empates.

Var

mat: vetor [0..4, 0..4] de inteiro
M, N, i, j, num0,num1,num2,num3 : inteiro

Inicio

           escreva("Quantas linhas vai ter a matriz? ")
           leia(M)
     n<- m


           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])

           fimpara
           fimpara

           limpatela()
           escreval("MAIOR ELEMENTO DE CADA LINHA: ")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           se (i=0) e (j<=4) entao
           se num0 < mat[i,j] entao
           num0<- mat[i,j]
           fimse
           fimse

           se (i=1) e (j<=4) entao
            se num1 < mat[i,j] entao
           num1<- mat[i,j]
           fimse
           fimse

           se (i=2) e (j<=4) entao
            se num2 < mat[i,j] entao
           num2<- mat[i,j]
           fimse
           fimse

           se (i=3) e (j<=4) entao
            se num3 < mat[i,j] entao
           num3<- mat[i,j]
           fimse
           fimse

           fimpara
           fimpara
             escreval(num0)
             escreval(num1)
             escreval(num2)
             escreval(num3)


Fimalgoritmo
____________________________________

05-) Algoritmo "Soma_Matrizes"

//Fazer um programa para ler duas matrizes de números inteiros A e B, contendo de M linhas e N colunas
//cada (M e N máximo = 10). Depois, gerar uma terceira matriz C onde cada elemento desta é a soma
//dos elementos correspondentes das matrizes originais. Imprimir na tela a matriz gerada.

Var

mat02: vetor [0..4, 0..4] de inteiro
mat01: vetor [0..4, 0..4] de inteiro
mat: vetor [0..4, 0..4] de inteiro

M, N, i, j, cont, indice,somaL,somaC : inteiro

Inicio

           escreva("Quantas linhas vai ter a matriz? ")
           leia(M)
           escreva("Quantas colunas vai ter a matriz? ")
           leia(N)

           escreval("Digite os valores da matriz A:")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])
           fimpara
           fimpara

           escreval("Digite os valores da matriz B:")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat01[i, j])
           fimpara
           fimpara

           
           escreval("MATRIZ SOMA: ")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           mat02[i,j] <- mat[i,j] + mat01[i,j]
           escreva(mat02[i,j], " ")

           fimpara
           escreval
           fimpara


           
Fimalgoritmo
  
____________________________________

06-) Algoritmo "Acima_Diagonal"

//Ler um inteiro N (máximo = 10) e uma matriz quadrada de ordem N
//contendo números inteiros. Mostrar a soma dos elementos acima da
//diagonal principal. Um exemplo de números acima da diagonal
//principal é mostrado ao lado (no caso as células com fundo cinza)(*).
//5 2* 3* 1*
//8 2 4* 5*
//7 3 1 3*
//9 12 9 5

Var

mat: vetor [0..4, 0..4] de inteiro

M, N, i, j, num0,num1,num2,soma : inteiro

Inicio

           escreva("Qual a ordem da matriz ? ")
           leia(M)
     n<- m
     
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])

           fimpara
           fimpara

           limpatela()
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           se (i=0) e (j>=1) entao
           num0<- num0+mat[i,j]
           fimse

           se (i=1) e (j>=2) entao
           num1<- num1+mat[i,j]
           fimse

           se (i=2) e (j=3) entao
           num2<- num2+mat[i,j]
           fimse
           fimpara
           fimpara
           
           soma<- num0+num1+num2
           escreval("SOMA DOS ELEMENTOS ACIMA DA DIAGONAL PRINCIPAL =",soma)


Fimalgoritmo

    
____________________________________

07-) Algoritmo "Matriz_Geral"

//Ler uma matriz quadrada de ordem N (máximo = 10), contendo números reais. Em seguida, fazer as
//seguintes ações:
//a) calcular e imprimir a soma de todos os elementos positivos da matriz.
//b) fazer a leitura do índice de uma linha da matriz e, daí, imprimir todos os elementos desta linha.
//c) fazer a leitura do índice de uma coluna da matriz e, daí, imprimir todos os elementos desta coluna.
//d) imprimir os elementos da diagonal principal da matriz.
//e) alterar a matriz elevando ao quadrado todos os números negativos da mesma. Em seguida imprimir
//a matriz alterada.

Var

mat: vetor [0..4, 0..4] de real
 M, N, i, j : inteiro
diagonal,somaPositivo,num2,soma,linha0,linha1,mostraLinha,mostraLinha1 : real

Inicio

           escreva("Qual a ordem da matriz ? ")
           leia(M)
     n<- m
     
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           escreva("Elemento [", i, ",", j, "]: ")
           leia(mat[i, j])
           
           se mat[i,j] >= 0 entao  //SOMA POSITIVO
           somaPositivo<- somaPositivo + mat[i,j]
           fimse
           
           fimpara
           fimpara

           limpatela()                            //COMEÇA AQUI!!!!
           escreval("SOMA DOS POSITIVOS: ",somaPositivo:4:1)
           escreval

           escreva("Escolha uma linha: ")   //Primeira Escolha
           leia(linha0)
           
           escreval
           escreval("LINHA ESCOLHIDA: ")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           se (i=linha0) e (j<=2) entao
           mostraLinha<- mat[i,j]
           escreva(mostraLinha:4:1," ")
           fimse
           fimpara
           fimpara
           
           escreval
           escreval
           escreva("Escolha uma coluna: ")    //Segunda Escolha
           leia(linha1)
           
           escreval
           escreval("COLUNA ESCOLHIDA: ")
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           se (i<=2) e (j=linha1) entao
           mostraLinha1<- mat[i,j]
           escreva(mostraLinha1:4:1," ")
           fimse
           fimpara
           fimpara
           
           escreval
           escreval
           escreval("DIAGONAL PRINCIPAL: ")    //DIAGONAL
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca

           se i=j entao //DIAGONAL
           diagonal<- mat[i,j]
           escreva(diagonal:4:1," ")
           fimse
           fimpara
           fimpara

           escreval
           escreval
           escreval("MATRIZ ALTERADA: ")    //MATRIZ ALTERADA:
           para i de 0 ate M-1 faca
           para j de 0 ate N-1 faca
           
           
           se mat[i,j] < 0 entao  //Negativo Potência
           mat[i,j]<- Exp(mat[i,j],2)
           fimse

           se mat[i,j] >= 0 entao
           escreva(mat[i,j]:4:1," ")
           fimse
            
           fimpara
           escreval
           fimpara

Fimalgoritmo
    


                        
            